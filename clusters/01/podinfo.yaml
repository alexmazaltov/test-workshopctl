# Source: podinfo/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: workshopctl-podinfo
  labels:
    helm.sh/chart: podinfo-5.0.3
    app.kubernetes.io/name: workshopctl-podinfo
    app.kubernetes.io/version: "5.0.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9898
      targetPort: http
      protocol: TCP
      name: http
    - port: 9999
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: workshopctl-podinfo
---
# Source: podinfo/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workshopctl-podinfo
  labels:
    helm.sh/chart: podinfo-5.0.3
    app.kubernetes.io/name: workshopctl-podinfo
    app.kubernetes.io/version: "5.0.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: workshopctl-podinfo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: workshopctl-podinfo
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9898"
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: podinfo
          image: "ghcr.io/stefanprodan/podinfo:5.0.3"
          imagePullPolicy: IfNotPresent
          command:
            - ./podinfo
            - --port=9898
            - --port-metrics=9797
            - --grpc-port=9999
            - --grpc-service-name=podinfo
            - --level=info
            - --random-delay=false
            - --random-error=false
          env:
            - name: PODINFO_UI_MESSAGE
              value: "Hello world!"
            - name: PODINFO_UI_COLOR
              value: "#34577c"
          ports:
            - name: http
              containerPort: 9898
              protocol: TCP
            - name: http-metrics
              containerPort: 9797
              protocol: TCP
            - name: grpc
              containerPort: 9999
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - podcli
                - check
                - http
                - localhost:9898/healthz
            initialDelaySeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - podcli
                - check
                - http
                - localhost:9898/readyz
            initialDelaySeconds: 1
            timeoutSeconds: 5
          volumeMounts:
            - name: data
              mountPath: /data
          resources:
            limits: null
            requests:
              cpu: 1m
              memory: 16Mi
      volumes:
        - name: data
          emptyDir: {}
---
# Source: podinfo/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: workshopctl-podinfo
  labels:
    helm.sh/chart: podinfo-5.0.3
    app.kubernetes.io/name: workshopctl-podinfo
    app.kubernetes.io/version: "5.0.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    external-dns.alpha.kubernetes.io/ttl: 30s
spec:
  rules:
    - host: podinfo.cluster-01.workshops.luxaslabs.com
      http:
        paths:
          - path: /
            backend:
              serviceName: workshopctl-podinfo
              servicePort: http
---
# Source: podinfo/templates/tests/jwt.yaml
apiVersion: v1
kind: Pod
metadata:
  name: workshopctl-podinfo-jwt-test-w774f
  labels:
    helm.sh/chart: podinfo-5.0.3
    app.kubernetes.io/name: workshopctl-podinfo
    app.kubernetes.io/version: "5.0.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    sidecar.istio.io/inject: "false"
    linkerd.io/inject: disabled
    appmesh.k8s.aws/sidecarInjectorWebhook: disabled
spec:
  containers:
    - name: tools
      image: giantswarm/tiny-tools
      command:
        - sh
        - -c
        - |
          TOKEN=$(curl -sd 'test' ${PODINFO_SVC}/token | jq -r .token) &&
          curl -sH "Authorization: Bearer ${TOKEN}" ${PODINFO_SVC}/token/validate | grep test
      env:
        - name: PODINFO_SVC
          value: "workshopctl-podinfo.default:9898"
  restartPolicy: Never
---
# Source: podinfo/templates/tests/grpc.yaml
apiVersion: v1
kind: Pod
metadata:
  name: workshopctl-podinfo-grpc-test-xx5re
  labels:
    helm.sh/chart: podinfo-5.0.3
    app.kubernetes.io/name: workshopctl-podinfo
    app.kubernetes.io/version: "5.0.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    sidecar.istio.io/inject: "false"
    linkerd.io/inject: disabled
    appmesh.k8s.aws/sidecarInjectorWebhook: disabled
spec:
  containers:
    - name: grpc-health-probe
      image: stefanprodan/grpc_health_probe:v0.3.0
      command: ['grpc_health_probe']
      args: ['-addr=workshopctl-podinfo.default:9999']
  restartPolicy: Never
---
# Source: podinfo/templates/tests/service.yaml
apiVersion: v1
kind: Pod
metadata:
  name: workshopctl-podinfo-service-test-5prml
  labels:
    helm.sh/chart: podinfo-5.0.3
    app.kubernetes.io/name: workshopctl-podinfo
    app.kubernetes.io/version: "5.0.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    sidecar.istio.io/inject: "false"
    linkerd.io/inject: disabled
    appmesh.k8s.aws/sidecarInjectorWebhook: disabled
spec:
  containers:
    - name: curl
      image: curlimages/curl:7.69.0
      command:
        - sh
        - -c
        - |
          curl -s ${PODINFO_SVC}/api/info | grep version
      env:
        - name: PODINFO_SVC
          value: "workshopctl-podinfo.default:9898"
  restartPolicy: Never
